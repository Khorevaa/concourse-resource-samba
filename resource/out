#!/usr/bin/env bash

source /opt/resource/lib/colours
source /opt/resource/lib/log
source /opt/resource/lib/crypto
source /opt/resource/lib/net

set_log_prefix "resource/out"
log "start" $1

src=$1
[ -z "${src}" ] && abort "usage: ${0} <path/to/destination>"

# for jq
PATH=/usr/local/bin:$PATH

version="${BUILD_PIPELINE_NAME}-${BUILD_ID}"
payload=$(mktemp -d /tmp/resource-out.XXXXXX)
request=$payload/request
response=$payload/response
archive=$payload/archive
bundle=$payload/bundle
touch $request
touch $response
touch $archive
mkdir $bundle/$version -p

###
# The request from Concourse
cat > $request <&0
log "request"

connection=$(jq -r '"//\(.source.server)/\(.source.share)"' < $request)
path=$(jq -r '.source.path // ""' < $request)
user=$(jq -r '.source.user // ""' < $request)
password=$(jq -r '.source.password // ""' < $request)
target=$(jq -r '.params.path // ""' < $request)

###
# Generate the archive
#
log "to-upload" $(ls $src)
cd $src && \
	cp -a ./* $bundle/$version/ && \
	tar C $bundle -cf $archive .

###
# Put the resources
# - build network command
log "connection" $connection
command=$(smb_put \
	$connection \
	$path \
	$target \
	$archive \
	$user \
	$password
)
# - execute network command
eval $command 2>&1
